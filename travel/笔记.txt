index.html 项目首页的模板文件
static 静态资源
src 项目源代码
main.js项目的入口文件
app.vue 项目根组件
componets 放项目中使用的组件

build wepack配置

6-3 
vue 单文件组件和路由
当一个文件以.vue结尾的时候，把这个文件叫做单文件组件，放置的是一个vue的组件
<template>
  // 组件的模板
</template>

<script>
  // 组件的逻辑
</script>

<style>
  // 组件的样式
</style>

路由
根据网址的不同，返回不同的内容给用户

<router-view/>  显示的是当前路由地址对应的内容

Vue.use(Router)

let router = new Router({
  routes: [
    {
      path: '/',
      name: 'HelloWord'
      component: HelloWord
    }
  ]

})

new Vue({
  el: '#app',
  router,  //注入路由
  components: { App },
  template: '<App/>'
})

当用户访问根路径的时候，在routes中，根路由对应的是HelloWord组件，在App.vue中，<router-view> 展示的是当前路由所对应的组件

访问 
<router-link to="/list"></router-link>

6-4 单页面应用和多页面应用

多页面应用：
  首屏时间块，SEO好
  缺点：每次都需要发送请求，页面切换慢
单页应用
  js可以感知页面的变化，js可以把当前页面的内容清除掉，下个页面挂载进来，这时候路由由前端来做
  页面进行渲染的时候，不需要进行html请求
  首页渲染慢，SEO差

6-5 
移动端1像素边框
手机上的分辨率比较高，有可能是一倍屏，或者二倍屏，这时候写border:1px,这时候1px是css像素，这时候在二倍屏上看，这时候对应的不是一个物理像素的宽度， 有可能是两个，三个， 为了解决这种1像素被显示成多像素的问题，需要引入1像素边框解决方案，本质上就是通过tansform: scale这种放大缩小的方式，来实现1px物理像素的解决办法

300毫秒延迟问题，在一些移动端机型上，当点击click事件，click会延迟300毫秒之后才会执行
引入fastclick

npm install fastclick --save

import fastclick from 'fastclick'
fastclick.attach(document.body)

7-1 使用stylus

npm install stylus stylus-loader -save

页面组件化，希望可以把页面拆分成一个个的小组件

移动端布局一般采用rem的布局方式，设置html{font-size: 50px}, rem是相对于根html的字体大小， 1rem是50px; 设计师给的是一个相对于手机物理像素二倍尺寸的图片(750px)，这时候86px的高度，实际上在手机上应该为43px，43px就是43/50rem，上下乘二，就是0.86rem，这就是设置成50px原因

7-2 在其他文件中引入别的css
@import '~@/assets/styles/varibles.styl'

webpack.base.conf.js
resolve: {
  alias: {
      'vue$': 'vue/dist/vue.esm.js',
      '@': resolve('src'),
      'styles': resolve('src/assets/styles')
    }
}

使用iconfont 
使用stylus定义变量
使用alias进行优化

<style lang="stylus" scoped>

</style>
scoped 只会对当前组件有影响，不会影响其他组件，不管是不是子组件


7-3 
安装轮波图插件
1. vue-awesome-swiper
cnpm install vue-awesome-swiper@2.6.7 --save



2. 解决图片未加载时，下面内容上移，加载完成之后，屏幕抖动问题

<div>
  <div class="wrapper">
    <img /> 
  </div>
  <div>文字区域<div>
</div>

写法1
.wrapper{
  overflow: hidden;
  width: 100%;
  height: 0;
  padding-bottom: 32.25% // 图片的高宽比，高度会想对于宽度自动撑开宽的32.25%， 这就实现了高宽比32.23%
}

写法2
.wrapper{
  width: 100%
  height: 31.25vw  (31.25 viewport宽度)
}

在当前组件中修改其他组件中的样式
.wrapper >>> .swiper-pagenation-bullet-active{
  background: red;
}
>>>  指的是样式进行一个穿透，只要.wrapper下面的子组件里面，只要出现.swiper-pagenation-bullet-active，都设置成红色

7-6 采用flex布局的页面，当使用省虐号的时候，不会出现，这时候flex: 1的元素上加上min-width: 0; 就会出现

7-7 组件的一部分内容需要被父组件定制的时候，可以使用slot

7-8 每个子组件都发送ajax，性能是很低的，所以应该在Home.vue中发送一个ajax，然后通过父子组件通信的方式，把数据传入子组件

vue中发送ajax请求可以使用 
1. 浏览器自带的fatch
2. vue-resource
3. axios 可以实现跨平台的数据请求浏览器上可以发送XHR请求， node服务器上可以发送http请求
npm install --save axios

static 目录存放的是静态文件，在整个项目目录中只有static目录下的文件能被访问到
http://localhost:8080/#/static/mock/index.json 
可以直接访问到文件

比如说 
/api/index.json 对应本地的/static/mock/index.json 
这时候就要使用请求代理

修改config/index.js文件
proxyTable: {
  '/api':{
    target: 'http://localhost:8080',
    pathRewrite: {
      '^/api': '/static/mock'
    }
  }
}

7-8 首页父子组件数据传递

